{"version":3,"sources":["config.js","App.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","App","props","writeUserData","Firebase","database","ref","set","state","console","log","getUserData","on","snapshot","val","setState","handleSubmit","event","preventDefault","name","refs","value","role","uid","developers","devIndex","findIndex","data","Date","getTime","toString","push","removeData","developer","newState","filter","updateData","initializeApp","this","prevProps","prevState","Fragment","className","map","key","style","width","marginRight","onClick","onSubmit","type","placeholder","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccc906f2.chunk.js","sourcesContent":["const config = {\n  apiKey: \"AIzaSyBLFhA_jxWhmThZ22AX4RKmOR1INgU4enM\",\n  authDomain: \"awesome-7c899.firebaseapp.com\",\n  databaseURL: \"https://awesome-7c899.firebaseio.com\"\n};\n\nexport default config;\n","import React from \"react\";\n\nimport Firebase from \"firebase\";\nimport config from \"./config\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    Firebase.initializeApp(config);\n\n    this.state = {\n      developers: []\n    };\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      this.writeUserData();\n    }\n  }\n\n  writeUserData = () => {\n    Firebase.database()\n      .ref(\"/\")\n      .set(this.state);\n    console.log(\"DATA SAVED\");\n  };\n\n  getUserData = () => {\n    let ref = Firebase.database().ref(\"/\");\n    ref.on(\"value\", snapshot => {\n      const state = snapshot.val();\n      this.setState(state);\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let name = this.refs.name.value;\n    let role = this.refs.role.value;\n    let uid = this.refs.uid.value;\n\n    if (uid && name && role) {\n      const { developers } = this.state;\n      const devIndex = developers.findIndex(data => {\n        return data.uid === uid;\n      });\n      developers[devIndex].name = name;\n      developers[devIndex].role = role;\n      this.setState({ developers });\n    } else if (name && role) {\n      const uid = new Date().getTime().toString();\n      const { developers } = this.state;\n      developers.push({ uid, name, role });\n      this.setState({ developers });\n    }\n\n    this.refs.name.value = \"\";\n    this.refs.role.value = \"\";\n    this.refs.uid.value = \"\";\n  };\n\n  removeData = developer => {\n    const { developers } = this.state;\n    const newState = developers.filter(data => {\n      return data.uid !== developer.uid;\n    });\n    this.setState({ developers: newState });\n  };\n\n  updateData = developer => {\n    this.refs.uid.value = developer.uid;\n    this.refs.name.value = developer.name;\n    this.refs.role.value = developer.role;\n  };\n\n  render() {\n    const { developers } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <h1>Firebase Development Team</h1>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              {developers.map(developer => (\n                <div\n                  key={developer.uid}\n                  className=\"card float-left\"\n                  style={{ width: \"18rem\", marginRight: \"1rem\" }}\n                >\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{developer.name}</h5>\n                    <p className=\"card-text\">{developer.role}</p>\n                    <button\n                      onClick={() => this.removeData(developer)}\n                      className=\"btn btn-link\"\n                    >\n                      Delete\n                    </button>\n                    <button\n                      onClick={() => this.updateData(developer)}\n                      className=\"btn btn-link\"\n                    >\n                      Edit\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <h1>Add new team member here</h1>\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"form-row\">\n                  <input type=\"hidden\" ref=\"uid\" />\n                  <div className=\"form-group col-md-6\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      ref=\"name\"\n                      className=\"form-control\"\n                      placeholder=\"Name\"\n                    />\n                  </div>\n                  <div className=\"form-group col-md-6\">\n                    <label>Role</label>\n                    <input\n                      type=\"text\"\n                      ref=\"role\"\n                      className=\"form-control\"\n                      placeholder=\"Role\"\n                    />\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Save\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <h3>\n                Tutorial{\" \"}\n                <a href=\"https://sebhastian.com/react-firebase-real-time-database-guide\">\n                  here\n                </a>\n              </h3>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}